.ui.inverted.menu
  .ui.container
    .header.item Logbook
    .item
      = link_to new_log_path
        i.plus.icon
    .ui.right.inverted.menu
      - if user_signed_in?
        .item
          = link_to 'Logout', destroy_user_session_path, method: :delete, class: 'ui black button'
      - else
        .item
          = link_to 'Login', new_user_session_path, class: 'ui black button'
        .item
          = link_to 'Sign up', new_user_registration_path, class: 'ui black button'
- if flash[:notice]
  .ui.success.message
    p = flash[:notice]
- elsif flash[:alert]
  .ui.negative.message
    p = flash[:alert]

.ui.main.container
  .ui.divided.grid
    .four.wide.column
      .ui.relaxed.list
        .item
          .content
            = current_user.email.split('@').first
        .item
          .content
            .description
              = "#{Date.current.beginning_of_week.strftime('%b %-d')} - #{(Date.current.end_of_week - 2).strftime('%b %-d')}"
            .header
              .ui.small.indicating.weekly.progress data-value=@weekly_progress_value data-total=162000
                .bar
                .label = current_user.current_week_total_time_view
        .item
          .content
            .description Today
            .header
              .ui.small.indicating.daily.progress data-value=@daily_progress_value data-total=32400
                .bar
                #daily-label.label = @log.total_time_view
        .item
          .content
            = link_to time_in_logs_path, method: :post, class:"fluid ui green button #{'disabled' if @log.time_in} #{'basic' unless @log.time_out}"
              - if @log.time_in
                = @log.time_in.localtime.strftime('%l:%M %P')
              - else
                | Time in
        .item
          .content
            - if @log.persisted?
              = link_to time_out_log_path(@log), method: :post, class:"timeout fluid ui blue button #{'disabled' unless @log.time_in} #{'basic' unless @log.time_in}"
                - if @log.time_out
                  = @log.time_out.localtime.strftime('%l:%M %P')
                - else
                  | Time out
    .twelve.wide.column
      .ui.feed
        - @current_week_logs.each do |log|
          .event
            .label
              .ui.basic.grey.circular.label
                = log.time_in.localtime.strftime('%u')
            .content
              .summary
                .ui.green.basic.label
                  | in
                  .detail
                    = log.time_in.localtime&.strftime('%l:%M %P')
                - if log.time_out
                  .ui.blue.basic.label
                    | out
                    .detail
                      = log.time_out.localtime.strftime('%l:%M %P')
                .date
                  = log.time_in.strftime('%b %-d')
              .meta
                i.hourglass.start.icon
                = log.total_time_view || '00:00'
                = link_to edit_log_path(log)
                  i.edit.icon
                = link_to log_path(log), method: :delete, data: { confirm: 'Sure?' }
                  i.remove.icon
javascript:
  $('.ui.progress').progress({
    label: 'ratio',
    limitValues: false,
    text: {
      ratio: "#{current_user.current_week_total_time_view}"
    }
  });

  var timeoutText = $('.timeout.button').text();
  var timeIn = "#{@log.time_in}"

  var daily = $('.ui.daily.progress');
  var dailyLabel = $('.daily.label');

  var dailyProgress = daily.data('value');
  var progressPercentage = 0;
  var dailyRemaining = 32400 - dailyProgress;

  if (timeIn && timeoutText === 'Time out') {
    updateDailyTime();
    updatePercentage();
    const interval = setInterval(incrementDaily, 1000 * 60);
  }

  function incrementDaily() {
    updatePercentage();

    if (progressPercentage >= 100) {
      clearInterval(interval);
    }

    updateDailyTime();
  }

  function updatePercentage() {
    let timeDiff = (new Date() - new Date(timeIn)) / 1000;
    let progressPercentage = timeDiff / 32400 * 100;
    daily.progress('set percent', (timeDiff / 32400 * 100));
  }

  function updateDailyTime() {
    let timeDiff = (new Date() - new Date(timeIn)) / 1000;
    let hours = parseInt(timeDiff / 3600);
    let minutes = parseInt(timeDiff / 60 % 60);    

    document.getElementById("daily-label").innerHTML = pad(hours) + ':' + pad(minutes);
  }

  function pad(n) {
    return (n < 10) ? ("0" + n) : n;
  }
